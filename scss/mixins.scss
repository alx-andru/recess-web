// Mixins and examples
// https://github.com/web-design-weekly/sass-mixins/blob/master/mixins.scss
/* Responsive Breakpoints
   ========================================================================== */
@mixin breakpoint($point) {
     @if $point == large{
        @media (min-width: 64.375em) {
             @content;
        }
    }
    @else if $point == medium {
         @media (min-width: 50em){
            @content;
        }
    }
    @else if $point == small {
         @media (min-width: 37.5em){
            @content;
        }
    }
}
/* Sub-section comment block
   ========================================================================== */
@mixin image-2x($image, $width, $height) {
     @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx){
        /* on retina, use image that's scaled by 2 */
        background-image: url($image);
        background-size: $width $height;
    }
}
/* Clearfix
  ========================================================================== */
@mixin clearfix() {
    & {
        *zoom: 1;
    }

    &:after,
    &:before {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}
/* Box Model
  ========================================================================== */
@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
    -moz-box-sizing: $box-model; // Firefox <= 19
    box-sizing: $box-model;
}
/* Border Radius
  ========================================================================== */
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
    /* stops bg color from leaking outside the border: */
}
// Single side border-radius
@mixin border-top-radius($radius) {
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}
@mixin border-right-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
    background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
    background-clip: padding-box;
}
@mixin border-left-radius($radius) {
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}
/* Opacity
  ========================================================================== */
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}
/* Center-align a block level element
  ========================================================================== */
@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}
/* Text overflow
  ========================================================================== */
@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
/* Absolute positioned
  ========================================================================== */
@mixin abs-pos($top: auto, $right: auto, $bottom: auto, $left: auto) {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    position: absolute;
}
/* Font Size
  ========================================================================== */
@mixin font-size($sizeValue: 12 ) {
    font-size: $sizeValue + px; //fallback for old browsers
    font-size: (0.125 * $sizeValue) + rem;
}
/* Cross browser inline block
  ========================================================================== */
@mixin inline-block() {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: top;
    zoom: 1;
    *display: inline;
}
/* Text replacement (instead of text-indent)
  ========================================================================== */
@mixin text-replacement() {
    border: 0;
    color: transparent;
    font: 0/0 a;
    text-shadow: none;
}
/* Line Height
  ========================================================================== */
@mixin line-height($heightValue: 12 ) {
    line-height: $heightValue + px; //fallback for old browsers
    line-height: (0.125 * $heightValue) + rem;
}
/* Placeholder
  ========================================================================== */
@mixin placeholder-color($color) {
    &.placeholder {
        color: $color;
    }

    &:-moz-placeholder {
        color: $color;
    }

    &::-webkit-input-placeholder {
        color: $color;
    }

    &:-ms-input-placeholder {
        color: $color;
    }
}
@mixin flex($direction: column) {
    display: flex;
    flex-direction: $direction;
    align-items: center;
    justify-content: space-between;
}
/* SVG
  ========================================================================== */
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    @if $index {
         @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}
@mixin svg ($from, $to, $top:100, $bottom:0) {
    $polygons: '<polygon fill="#{$from}" points="#{$bottom+2} 100 0 100 0 0 #{$top+2} 0"/><polygon fill="#{$to}" points="#{$top} 0, 100 0, 100 100, #{$bottom} 100"/>';
    $svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none">#{$polygons}</svg>';
    $svg: str-replace($svg, '#', '%23');
    $svg: str-replace($svg, '<', '%3C');
    $svg: str-replace($svg, '>', '%3E');
    background-image: url('data:image/svg+xml,#{$svg}');
    background-repeat: no-repeat;
    background-size: 100% 100%;
}

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
    $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
    $blur: nth(1.5 3 10 14 19, $depth) * 4px;
    $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

    @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
    $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
    $blur: nth(1 3 3 5 6, $depth) * 4px;
    $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

    @return 0 $primary-offset $blur $color;
}

@mixin card($depth) {
    @if $depth < 1 {
        box-shadow: none;
    } @else if $depth > 5 {
        @warn "Invalid $depth `#{$depth}` for mixin `card`.";
    } @else {
        box-shadow: bottom-shadow($depth), top-shadow($depth);
    }
}
